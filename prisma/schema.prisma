datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String?
  accounts      Account[]
  reviews       Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role  @default(ADMIN)
}

enum Role {
    ADMIN
    USER
}
 
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}


model Product {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String
  price     Float
  brand     String
  inStock   Boolean @default(true)
  description String
  category  String
  reviews Review[]
}
model Review {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId      String @db.ObjectId
  email     String
  comment   String
  rating    Int
  productId String @db.ObjectId
  createdDate DateTime @default(now())
  
product Product @relation(fields: [productId], references: [id])
user User @relation(fields: [userId], references: [id], onDelete: Cascade)

}
 
